{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\n/**\r\n * Actions represent the type of change to a location value.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#action\r\n */\n\nvar Action;\n\n(function (Action) {\n  /**\r\n   * A POP indicates a change to an arbitrary index in the history stack, such\r\n   * as a back or forward navigation. It does not describe the direction of the\r\n   * navigation, only that the current index changed.\r\n   *\r\n   * Note: This is the default action for newly created history objects.\r\n   */\n  Action[\"Pop\"] = \"POP\";\n  /**\r\n   * A PUSH indicates a new entry being added to the history stack, such as when\r\n   * a link is clicked and a new page loads. When this happens, all subsequent\r\n   * entries in the stack are lost.\r\n   */\n\n  Action[\"Push\"] = \"PUSH\";\n  /**\r\n   * A REPLACE indicates the entry at the current index in the history stack\r\n   * being replaced by a new one.\r\n   */\n\n  Action[\"Replace\"] = \"REPLACE\";\n})(Action || (Action = {}));\n\nvar readOnly = process.env.NODE_ENV !== \"production\" ? function (obj) {\n  return Object.freeze(obj);\n} : function (obj) {\n  return obj;\n};\n\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== 'undefined') console.warn(message);\n\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message); // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nvar BeforeUnloadEventType = 'beforeunload';\nvar HashChangeEventType = 'hashchange';\nvar PopStateEventType = 'popstate';\n/**\r\n * Browser history stores the location in regular URLs. This is the standard for\r\n * most web apps, but it requires some configuration on the server to ensure you\r\n * serve the same app at multiple URLs.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\r\n */\n\nfunction createBrowserHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      _options$window = _options.window,\n      window = _options$window === void 0 ? document.defaultView : _options$window;\n  var globalHistory = window.history;\n\n  function getIndexAndLocation() {\n    var _window$location = window.location,\n        pathname = _window$location.pathname,\n        search = _window$location.search,\n        hash = _window$location.hash;\n    var state = globalHistory.state || {};\n    return [state.idx, readOnly({\n      pathname: pathname,\n      search: search,\n      hash: hash,\n      state: state.usr || null,\n      key: state.key || 'default'\n    })];\n  }\n\n  var blockedPopTx = null;\n\n  function handlePop() {\n    if (blockedPopTx) {\n      blockers.call(blockedPopTx);\n      blockedPopTx = null;\n    } else {\n      var nextAction = Action.Pop;\n\n      var _getIndexAndLocation = getIndexAndLocation(),\n          nextIndex = _getIndexAndLocation[0],\n          nextLocation = _getIndexAndLocation[1];\n\n      if (blockers.length) {\n        if (nextIndex != null) {\n          var delta = index - nextIndex;\n\n          if (delta) {\n            // Revert the POP\n            blockedPopTx = {\n              action: nextAction,\n              location: nextLocation,\n              retry: function retry() {\n                go(delta * -1);\n              }\n            };\n            go(delta);\n          }\n        } else {\n          // Trying to POP to a location with no index. We did not create\n          // this location, so we can't effectively block the navigation.\n          process.env.NODE_ENV !== \"production\" ? warning(false, // TODO: Write up a doc that explains our blocking strategy in\n          // detail and link to it here so people can understand better what\n          // is going on and how to avoid it.\n          \"You are trying to block a POP navigation to a location that was not \" + \"created by the history library. The block will fail silently in \" + \"production, but in general you should do all navigation with the \" + \"history library (instead of using window.history.pushState directly) \" + \"to avoid this situation.\") : void 0;\n        }\n      } else {\n        applyTx(nextAction);\n      }\n    }\n  }\n\n  window.addEventListener(PopStateEventType, handlePop);\n  var action = Action.Pop;\n\n  var _getIndexAndLocation2 = getIndexAndLocation(),\n      index = _getIndexAndLocation2[0],\n      location = _getIndexAndLocation2[1];\n\n  var listeners = createEvents();\n  var blockers = createEvents();\n\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState(_extends({}, globalHistory.state, {\n      idx: index\n    }), '');\n  }\n\n  function createHref(to) {\n    return typeof to === 'string' ? to : createPath(to);\n  } // state defaults to `null` because `window.history.state` does\n\n\n  function getNextLocation(to, state) {\n    if (state === void 0) {\n      state = null;\n    }\n\n    return readOnly(_extends({\n      pathname: location.pathname,\n      hash: '',\n      search: ''\n    }, typeof to === 'string' ? parsePath(to) : to, {\n      state: state,\n      key: createKey()\n    }));\n  }\n\n  function getHistoryStateAndUrl(nextLocation, index) {\n    return [{\n      usr: nextLocation.state,\n      key: nextLocation.key,\n      idx: index\n    }, createHref(nextLocation)];\n  }\n\n  function allowTx(action, location, retry) {\n    return !blockers.length || (blockers.call({\n      action: action,\n      location: location,\n      retry: retry\n    }), false);\n  }\n\n  function applyTx(nextAction) {\n    action = nextAction;\n\n    var _getIndexAndLocation3 = getIndexAndLocation();\n\n    index = _getIndexAndLocation3[0];\n    location = _getIndexAndLocation3[1];\n    listeners.call({\n      action: action,\n      location: location\n    });\n  }\n\n  function push(to, state) {\n    var nextAction = Action.Push;\n    var nextLocation = getNextLocation(to, state);\n\n    function retry() {\n      push(to, state);\n    }\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      var _getHistoryStateAndUr = getHistoryStateAndUrl(nextLocation, index + 1),\n          historyState = _getHistoryStateAndUr[0],\n          url = _getHistoryStateAndUr[1]; // TODO: Support forced reloading\n      // try...catch because iOS limits us to 100 pushState calls :/\n\n\n      try {\n        globalHistory.pushState(historyState, '', url);\n      } catch (error) {\n        // They are going to lose state here, but there is no real\n        // way to warn them about it since the page will refresh...\n        window.location.assign(url);\n      }\n\n      applyTx(nextAction);\n    }\n  }\n\n  function replace(to, state) {\n    var nextAction = Action.Replace;\n    var nextLocation = getNextLocation(to, state);\n\n    function retry() {\n      replace(to, state);\n    }\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      var _getHistoryStateAndUr2 = getHistoryStateAndUrl(nextLocation, index),\n          historyState = _getHistoryStateAndUr2[0],\n          url = _getHistoryStateAndUr2[1]; // TODO: Support forced reloading\n\n\n      globalHistory.replaceState(historyState, '', url);\n      applyTx(nextAction);\n    }\n  }\n\n  function go(delta) {\n    globalHistory.go(delta);\n  }\n\n  var history = {\n    get action() {\n      return action;\n    },\n\n    get location() {\n      return location;\n    },\n\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    back: function back() {\n      go(-1);\n    },\n    forward: function forward() {\n      go(1);\n    },\n    listen: function listen(listener) {\n      return listeners.push(listener);\n    },\n    block: function block(blocker) {\n      var unblock = blockers.push(blocker);\n\n      if (blockers.length === 1) {\n        window.addEventListener(BeforeUnloadEventType, promptBeforeUnload);\n      }\n\n      return function () {\n        unblock(); // Remove the beforeunload listener so the document may\n        // still be salvageable in the pagehide event.\n        // See https://html.spec.whatwg.org/#unloading-documents\n\n        if (!blockers.length) {\n          window.removeEventListener(BeforeUnloadEventType, promptBeforeUnload);\n        }\n      };\n    }\n  };\n  return history;\n}\n/**\r\n * Hash history stores the location in window.location.hash. This makes it ideal\r\n * for situations where you don't want to send the location to the server for\r\n * some reason, either because you do cannot configure it or the URL space is\r\n * reserved for something else.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\r\n */\n\n\nfunction createHashHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options2 = options,\n      _options2$window = _options2.window,\n      window = _options2$window === void 0 ? document.defaultView : _options2$window;\n  var globalHistory = window.history;\n\n  function getIndexAndLocation() {\n    var _parsePath = parsePath(window.location.hash.substr(1)),\n        _parsePath$pathname = _parsePath.pathname,\n        pathname = _parsePath$pathname === void 0 ? '/' : _parsePath$pathname,\n        _parsePath$search = _parsePath.search,\n        search = _parsePath$search === void 0 ? '' : _parsePath$search,\n        _parsePath$hash = _parsePath.hash,\n        hash = _parsePath$hash === void 0 ? '' : _parsePath$hash;\n\n    var state = globalHistory.state || {};\n    return [state.idx, readOnly({\n      pathname: pathname,\n      search: search,\n      hash: hash,\n      state: state.usr || null,\n      key: state.key || 'default'\n    })];\n  }\n\n  var blockedPopTx = null;\n\n  function handlePop() {\n    if (blockedPopTx) {\n      blockers.call(blockedPopTx);\n      blockedPopTx = null;\n    } else {\n      var nextAction = Action.Pop;\n\n      var _getIndexAndLocation4 = getIndexAndLocation(),\n          nextIndex = _getIndexAndLocation4[0],\n          nextLocation = _getIndexAndLocation4[1];\n\n      if (blockers.length) {\n        if (nextIndex != null) {\n          var delta = index - nextIndex;\n\n          if (delta) {\n            // Revert the POP\n            blockedPopTx = {\n              action: nextAction,\n              location: nextLocation,\n              retry: function retry() {\n                go(delta * -1);\n              }\n            };\n            go(delta);\n          }\n        } else {\n          // Trying to POP to a location with no index. We did not create\n          // this location, so we can't effectively block the navigation.\n          process.env.NODE_ENV !== \"production\" ? warning(false, // TODO: Write up a doc that explains our blocking strategy in\n          // detail and link to it here so people can understand better\n          // what is going on and how to avoid it.\n          \"You are trying to block a POP navigation to a location that was not \" + \"created by the history library. The block will fail silently in \" + \"production, but in general you should do all navigation with the \" + \"history library (instead of using window.history.pushState directly) \" + \"to avoid this situation.\") : void 0;\n        }\n      } else {\n        applyTx(nextAction);\n      }\n    }\n  }\n\n  window.addEventListener(PopStateEventType, handlePop); // popstate does not fire on hashchange in IE 11 and old (trident) Edge\n  // https://developer.mozilla.org/de/docs/Web/API/Window/popstate_event\n\n  window.addEventListener(HashChangeEventType, function () {\n    var _getIndexAndLocation5 = getIndexAndLocation(),\n        nextLocation = _getIndexAndLocation5[1]; // Ignore extraneous hashchange events.\n\n\n    if (createPath(nextLocation) !== createPath(location)) {\n      handlePop();\n    }\n  });\n  var action = Action.Pop;\n\n  var _getIndexAndLocation6 = getIndexAndLocation(),\n      index = _getIndexAndLocation6[0],\n      location = _getIndexAndLocation6[1];\n\n  var listeners = createEvents();\n  var blockers = createEvents();\n\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState(_extends({}, globalHistory.state, {\n      idx: index\n    }), '');\n  }\n\n  function getBaseHref() {\n    var base = document.querySelector('base');\n    var href = '';\n\n    if (base && base.getAttribute('href')) {\n      var url = window.location.href;\n      var hashIndex = url.indexOf('#');\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n\n    return href;\n  }\n\n  function createHref(to) {\n    return getBaseHref() + '#' + (typeof to === 'string' ? to : createPath(to));\n  }\n\n  function getNextLocation(to, state) {\n    if (state === void 0) {\n      state = null;\n    }\n\n    return readOnly(_extends({\n      pathname: location.pathname,\n      hash: '',\n      search: ''\n    }, typeof to === 'string' ? parsePath(to) : to, {\n      state: state,\n      key: createKey()\n    }));\n  }\n\n  function getHistoryStateAndUrl(nextLocation, index) {\n    return [{\n      usr: nextLocation.state,\n      key: nextLocation.key,\n      idx: index\n    }, createHref(nextLocation)];\n  }\n\n  function allowTx(action, location, retry) {\n    return !blockers.length || (blockers.call({\n      action: action,\n      location: location,\n      retry: retry\n    }), false);\n  }\n\n  function applyTx(nextAction) {\n    action = nextAction;\n\n    var _getIndexAndLocation7 = getIndexAndLocation();\n\n    index = _getIndexAndLocation7[0];\n    location = _getIndexAndLocation7[1];\n    listeners.call({\n      action: action,\n      location: location\n    });\n  }\n\n  function push(to, state) {\n    var nextAction = Action.Push;\n    var nextLocation = getNextLocation(to, state);\n\n    function retry() {\n      push(to, state);\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(nextLocation.pathname.charAt(0) === '/', \"Relative pathnames are not supported in hash history.push(\" + JSON.stringify(to) + \")\") : void 0;\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      var _getHistoryStateAndUr3 = getHistoryStateAndUrl(nextLocation, index + 1),\n          historyState = _getHistoryStateAndUr3[0],\n          url = _getHistoryStateAndUr3[1]; // TODO: Support forced reloading\n      // try...catch because iOS limits us to 100 pushState calls :/\n\n\n      try {\n        globalHistory.pushState(historyState, '', url);\n      } catch (error) {\n        // They are going to lose state here, but there is no real\n        // way to warn them about it since the page will refresh...\n        window.location.assign(url);\n      }\n\n      applyTx(nextAction);\n    }\n  }\n\n  function replace(to, state) {\n    var nextAction = Action.Replace;\n    var nextLocation = getNextLocation(to, state);\n\n    function retry() {\n      replace(to, state);\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(nextLocation.pathname.charAt(0) === '/', \"Relative pathnames are not supported in hash history.replace(\" + JSON.stringify(to) + \")\") : void 0;\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      var _getHistoryStateAndUr4 = getHistoryStateAndUrl(nextLocation, index),\n          historyState = _getHistoryStateAndUr4[0],\n          url = _getHistoryStateAndUr4[1]; // TODO: Support forced reloading\n\n\n      globalHistory.replaceState(historyState, '', url);\n      applyTx(nextAction);\n    }\n  }\n\n  function go(delta) {\n    globalHistory.go(delta);\n  }\n\n  var history = {\n    get action() {\n      return action;\n    },\n\n    get location() {\n      return location;\n    },\n\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    back: function back() {\n      go(-1);\n    },\n    forward: function forward() {\n      go(1);\n    },\n    listen: function listen(listener) {\n      return listeners.push(listener);\n    },\n    block: function block(blocker) {\n      var unblock = blockers.push(blocker);\n\n      if (blockers.length === 1) {\n        window.addEventListener(BeforeUnloadEventType, promptBeforeUnload);\n      }\n\n      return function () {\n        unblock(); // Remove the beforeunload listener so the document may\n        // still be salvageable in the pagehide event.\n        // See https://html.spec.whatwg.org/#unloading-documents\n\n        if (!blockers.length) {\n          window.removeEventListener(BeforeUnloadEventType, promptBeforeUnload);\n        }\n      };\n    }\n  };\n  return history;\n}\n/**\r\n * Memory history stores the current location in memory. It is designed for use\r\n * in stateful non-browser environments like tests and React Native.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#creatememoryhistory\r\n */\n\n\nfunction createMemoryHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options3 = options,\n      _options3$initialEntr = _options3.initialEntries,\n      initialEntries = _options3$initialEntr === void 0 ? ['/'] : _options3$initialEntr,\n      initialIndex = _options3.initialIndex;\n  var entries = initialEntries.map(function (entry) {\n    var location = readOnly(_extends({\n      pathname: '/',\n      search: '',\n      hash: '',\n      state: null,\n      key: createKey()\n    }, typeof entry === 'string' ? parsePath(entry) : entry));\n    process.env.NODE_ENV !== \"production\" ? warning(location.pathname.charAt(0) === '/', \"Relative pathnames are not supported in createMemoryHistory({ initialEntries }) (invalid entry: \" + JSON.stringify(entry) + \")\") : void 0;\n    return location;\n  });\n  var index = clamp(initialIndex == null ? entries.length - 1 : initialIndex, 0, entries.length - 1);\n  var action = Action.Pop;\n  var location = entries[index];\n  var listeners = createEvents();\n  var blockers = createEvents();\n\n  function createHref(to) {\n    return typeof to === 'string' ? to : createPath(to);\n  }\n\n  function getNextLocation(to, state) {\n    if (state === void 0) {\n      state = null;\n    }\n\n    return readOnly(_extends({\n      pathname: location.pathname,\n      search: '',\n      hash: ''\n    }, typeof to === 'string' ? parsePath(to) : to, {\n      state: state,\n      key: createKey()\n    }));\n  }\n\n  function allowTx(action, location, retry) {\n    return !blockers.length || (blockers.call({\n      action: action,\n      location: location,\n      retry: retry\n    }), false);\n  }\n\n  function applyTx(nextAction, nextLocation) {\n    action = nextAction;\n    location = nextLocation;\n    listeners.call({\n      action: action,\n      location: location\n    });\n  }\n\n  function push(to, state) {\n    var nextAction = Action.Push;\n    var nextLocation = getNextLocation(to, state);\n\n    function retry() {\n      push(to, state);\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(location.pathname.charAt(0) === '/', \"Relative pathnames are not supported in memory history.push(\" + JSON.stringify(to) + \")\") : void 0;\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      applyTx(nextAction, nextLocation);\n    }\n  }\n\n  function replace(to, state) {\n    var nextAction = Action.Replace;\n    var nextLocation = getNextLocation(to, state);\n\n    function retry() {\n      replace(to, state);\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(location.pathname.charAt(0) === '/', \"Relative pathnames are not supported in memory history.replace(\" + JSON.stringify(to) + \")\") : void 0;\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      entries[index] = nextLocation;\n      applyTx(nextAction, nextLocation);\n    }\n  }\n\n  function go(delta) {\n    var nextIndex = clamp(index + delta, 0, entries.length - 1);\n    var nextAction = Action.Pop;\n    var nextLocation = entries[nextIndex];\n\n    function retry() {\n      go(delta);\n    }\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      index = nextIndex;\n      applyTx(nextAction, nextLocation);\n    }\n  }\n\n  var history = {\n    get index() {\n      return index;\n    },\n\n    get action() {\n      return action;\n    },\n\n    get location() {\n      return location;\n    },\n\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    back: function back() {\n      go(-1);\n    },\n    forward: function forward() {\n      go(1);\n    },\n    listen: function listen(listener) {\n      return listeners.push(listener);\n    },\n    block: function block(blocker) {\n      return blockers.push(blocker);\n    }\n  };\n  return history;\n} ////////////////////////////////////////////////////////////////////////////////\n// UTILS\n////////////////////////////////////////////////////////////////////////////////\n\n\nfunction clamp(n, lowerBound, upperBound) {\n  return Math.min(Math.max(n, lowerBound), upperBound);\n}\n\nfunction promptBeforeUnload(event) {\n  // Cancel the event.\n  event.preventDefault(); // Chrome (and legacy IE) requires returnValue to be set.\n\n  event.returnValue = '';\n}\n\nfunction createEvents() {\n  var handlers = [];\n  return {\n    get length() {\n      return handlers.length;\n    },\n\n    push: function push(fn) {\n      handlers.push(fn);\n      return function () {\n        handlers = handlers.filter(function (handler) {\n          return handler !== fn;\n        });\n      };\n    },\n    call: function call(arg) {\n      handlers.forEach(function (fn) {\n        return fn && fn(arg);\n      });\n    }\n  };\n}\n\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n/**\r\n * Creates a string URL path from the given pathname, search, and hash components.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createpath\r\n */\n\n\nfunction createPath(_ref) {\n  var _ref$pathname = _ref.pathname,\n      pathname = _ref$pathname === void 0 ? '/' : _ref$pathname,\n      _ref$search = _ref.search,\n      search = _ref$search === void 0 ? '' : _ref$search,\n      _ref$hash = _ref.hash,\n      hash = _ref$hash === void 0 ? '' : _ref$hash;\n  if (search && search !== '?') pathname += search.charAt(0) === '?' ? search : '?' + search;\n  if (hash && hash !== '#') pathname += hash.charAt(0) === '#' ? hash : '#' + hash;\n  return pathname;\n}\n/**\r\n * Parses a string URL path into its separate pathname, search, and hash components.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#parsepath\r\n */\n\n\nfunction parsePath(path) {\n  var parsedPath = {};\n\n  if (path) {\n    var hashIndex = path.indexOf('#');\n\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n\n    var searchIndex = path.indexOf('?');\n\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n\n  return parsedPath;\n}\n\nexport { Action, createBrowserHistory, createHashHistory, createMemoryHistory, createPath, parsePath };","map":{"version":3,"mappings":"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","names":["_extends","Action","readOnly","process","env","NODE_ENV","obj","Object","freeze","warning","cond","message","console","warn","Error","e","BeforeUnloadEventType","HashChangeEventType","PopStateEventType","createBrowserHistory","options","_options","_options$window","window","document","defaultView","globalHistory","history","getIndexAndLocation","_window$location","location","pathname","search","hash","state","idx","usr","key","blockedPopTx","handlePop","blockers","call","nextAction","Pop","_getIndexAndLocation","nextIndex","nextLocation","length","delta","index","action","retry","go","applyTx","addEventListener","_getIndexAndLocation2","listeners","createEvents","replaceState","createHref","to","createPath","getNextLocation","parsePath","createKey","getHistoryStateAndUrl","allowTx","_getIndexAndLocation3","push","Push","_getHistoryStateAndUr","historyState","url","pushState","error","assign","replace","Replace","_getHistoryStateAndUr2","back","forward","listen","listener","block","blocker","unblock","promptBeforeUnload","removeEventListener","createHashHistory","_options2","_options2$window","_parsePath","substr","_parsePath$pathname","_parsePath$search","_parsePath$hash","_getIndexAndLocation4","_getIndexAndLocation5","_getIndexAndLocation6","getBaseHref","base","querySelector","href","getAttribute","hashIndex","indexOf","slice","_getIndexAndLocation7","charAt","JSON","stringify","_getHistoryStateAndUr3","_getHistoryStateAndUr4","createMemoryHistory","_options3","_options3$initialEntr","initialEntries","initialIndex","entries","map","entry","clamp","splice","n","lowerBound","upperBound","Math","min","max","event","preventDefault","returnValue","handlers","fn","filter","handler","arg","forEach","random","toString","_ref","_ref$pathname","_ref$search","_ref$hash","path","parsedPath","searchIndex"],"sources":["C:/Users/strie/Documents/GitHub/uwsynaptech-website/synaptech-page/node_modules/history/index.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\n\n/**\r\n * Actions represent the type of change to a location value.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#action\r\n */\nvar Action;\n\n(function (Action) {\n  /**\r\n   * A POP indicates a change to an arbitrary index in the history stack, such\r\n   * as a back or forward navigation. It does not describe the direction of the\r\n   * navigation, only that the current index changed.\r\n   *\r\n   * Note: This is the default action for newly created history objects.\r\n   */\n  Action[\"Pop\"] = \"POP\";\n  /**\r\n   * A PUSH indicates a new entry being added to the history stack, such as when\r\n   * a link is clicked and a new page loads. When this happens, all subsequent\r\n   * entries in the stack are lost.\r\n   */\n\n  Action[\"Push\"] = \"PUSH\";\n  /**\r\n   * A REPLACE indicates the entry at the current index in the history stack\r\n   * being replaced by a new one.\r\n   */\n\n  Action[\"Replace\"] = \"REPLACE\";\n})(Action || (Action = {}));\n\nvar readOnly = process.env.NODE_ENV !== \"production\" ? function (obj) {\n  return Object.freeze(obj);\n} : function (obj) {\n  return obj;\n};\n\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== 'undefined') console.warn(message);\n\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message); // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nvar BeforeUnloadEventType = 'beforeunload';\nvar HashChangeEventType = 'hashchange';\nvar PopStateEventType = 'popstate';\n/**\r\n * Browser history stores the location in regular URLs. This is the standard for\r\n * most web apps, but it requires some configuration on the server to ensure you\r\n * serve the same app at multiple URLs.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\r\n */\n\nfunction createBrowserHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      _options$window = _options.window,\n      window = _options$window === void 0 ? document.defaultView : _options$window;\n  var globalHistory = window.history;\n\n  function getIndexAndLocation() {\n    var _window$location = window.location,\n        pathname = _window$location.pathname,\n        search = _window$location.search,\n        hash = _window$location.hash;\n    var state = globalHistory.state || {};\n    return [state.idx, readOnly({\n      pathname: pathname,\n      search: search,\n      hash: hash,\n      state: state.usr || null,\n      key: state.key || 'default'\n    })];\n  }\n\n  var blockedPopTx = null;\n\n  function handlePop() {\n    if (blockedPopTx) {\n      blockers.call(blockedPopTx);\n      blockedPopTx = null;\n    } else {\n      var nextAction = Action.Pop;\n\n      var _getIndexAndLocation = getIndexAndLocation(),\n          nextIndex = _getIndexAndLocation[0],\n          nextLocation = _getIndexAndLocation[1];\n\n      if (blockers.length) {\n        if (nextIndex != null) {\n          var delta = index - nextIndex;\n\n          if (delta) {\n            // Revert the POP\n            blockedPopTx = {\n              action: nextAction,\n              location: nextLocation,\n              retry: function retry() {\n                go(delta * -1);\n              }\n            };\n            go(delta);\n          }\n        } else {\n          // Trying to POP to a location with no index. We did not create\n          // this location, so we can't effectively block the navigation.\n          process.env.NODE_ENV !== \"production\" ? warning(false, // TODO: Write up a doc that explains our blocking strategy in\n          // detail and link to it here so people can understand better what\n          // is going on and how to avoid it.\n          \"You are trying to block a POP navigation to a location that was not \" + \"created by the history library. The block will fail silently in \" + \"production, but in general you should do all navigation with the \" + \"history library (instead of using window.history.pushState directly) \" + \"to avoid this situation.\") : void 0;\n        }\n      } else {\n        applyTx(nextAction);\n      }\n    }\n  }\n\n  window.addEventListener(PopStateEventType, handlePop);\n  var action = Action.Pop;\n\n  var _getIndexAndLocation2 = getIndexAndLocation(),\n      index = _getIndexAndLocation2[0],\n      location = _getIndexAndLocation2[1];\n\n  var listeners = createEvents();\n  var blockers = createEvents();\n\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState(_extends({}, globalHistory.state, {\n      idx: index\n    }), '');\n  }\n\n  function createHref(to) {\n    return typeof to === 'string' ? to : createPath(to);\n  } // state defaults to `null` because `window.history.state` does\n\n\n  function getNextLocation(to, state) {\n    if (state === void 0) {\n      state = null;\n    }\n\n    return readOnly(_extends({\n      pathname: location.pathname,\n      hash: '',\n      search: ''\n    }, typeof to === 'string' ? parsePath(to) : to, {\n      state: state,\n      key: createKey()\n    }));\n  }\n\n  function getHistoryStateAndUrl(nextLocation, index) {\n    return [{\n      usr: nextLocation.state,\n      key: nextLocation.key,\n      idx: index\n    }, createHref(nextLocation)];\n  }\n\n  function allowTx(action, location, retry) {\n    return !blockers.length || (blockers.call({\n      action: action,\n      location: location,\n      retry: retry\n    }), false);\n  }\n\n  function applyTx(nextAction) {\n    action = nextAction;\n\n    var _getIndexAndLocation3 = getIndexAndLocation();\n\n    index = _getIndexAndLocation3[0];\n    location = _getIndexAndLocation3[1];\n    listeners.call({\n      action: action,\n      location: location\n    });\n  }\n\n  function push(to, state) {\n    var nextAction = Action.Push;\n    var nextLocation = getNextLocation(to, state);\n\n    function retry() {\n      push(to, state);\n    }\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      var _getHistoryStateAndUr = getHistoryStateAndUrl(nextLocation, index + 1),\n          historyState = _getHistoryStateAndUr[0],\n          url = _getHistoryStateAndUr[1]; // TODO: Support forced reloading\n      // try...catch because iOS limits us to 100 pushState calls :/\n\n\n      try {\n        globalHistory.pushState(historyState, '', url);\n      } catch (error) {\n        // They are going to lose state here, but there is no real\n        // way to warn them about it since the page will refresh...\n        window.location.assign(url);\n      }\n\n      applyTx(nextAction);\n    }\n  }\n\n  function replace(to, state) {\n    var nextAction = Action.Replace;\n    var nextLocation = getNextLocation(to, state);\n\n    function retry() {\n      replace(to, state);\n    }\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      var _getHistoryStateAndUr2 = getHistoryStateAndUrl(nextLocation, index),\n          historyState = _getHistoryStateAndUr2[0],\n          url = _getHistoryStateAndUr2[1]; // TODO: Support forced reloading\n\n\n      globalHistory.replaceState(historyState, '', url);\n      applyTx(nextAction);\n    }\n  }\n\n  function go(delta) {\n    globalHistory.go(delta);\n  }\n\n  var history = {\n    get action() {\n      return action;\n    },\n\n    get location() {\n      return location;\n    },\n\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    back: function back() {\n      go(-1);\n    },\n    forward: function forward() {\n      go(1);\n    },\n    listen: function listen(listener) {\n      return listeners.push(listener);\n    },\n    block: function block(blocker) {\n      var unblock = blockers.push(blocker);\n\n      if (blockers.length === 1) {\n        window.addEventListener(BeforeUnloadEventType, promptBeforeUnload);\n      }\n\n      return function () {\n        unblock(); // Remove the beforeunload listener so the document may\n        // still be salvageable in the pagehide event.\n        // See https://html.spec.whatwg.org/#unloading-documents\n\n        if (!blockers.length) {\n          window.removeEventListener(BeforeUnloadEventType, promptBeforeUnload);\n        }\n      };\n    }\n  };\n  return history;\n}\n/**\r\n * Hash history stores the location in window.location.hash. This makes it ideal\r\n * for situations where you don't want to send the location to the server for\r\n * some reason, either because you do cannot configure it or the URL space is\r\n * reserved for something else.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\r\n */\n\nfunction createHashHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options2 = options,\n      _options2$window = _options2.window,\n      window = _options2$window === void 0 ? document.defaultView : _options2$window;\n  var globalHistory = window.history;\n\n  function getIndexAndLocation() {\n    var _parsePath = parsePath(window.location.hash.substr(1)),\n        _parsePath$pathname = _parsePath.pathname,\n        pathname = _parsePath$pathname === void 0 ? '/' : _parsePath$pathname,\n        _parsePath$search = _parsePath.search,\n        search = _parsePath$search === void 0 ? '' : _parsePath$search,\n        _parsePath$hash = _parsePath.hash,\n        hash = _parsePath$hash === void 0 ? '' : _parsePath$hash;\n\n    var state = globalHistory.state || {};\n    return [state.idx, readOnly({\n      pathname: pathname,\n      search: search,\n      hash: hash,\n      state: state.usr || null,\n      key: state.key || 'default'\n    })];\n  }\n\n  var blockedPopTx = null;\n\n  function handlePop() {\n    if (blockedPopTx) {\n      blockers.call(blockedPopTx);\n      blockedPopTx = null;\n    } else {\n      var nextAction = Action.Pop;\n\n      var _getIndexAndLocation4 = getIndexAndLocation(),\n          nextIndex = _getIndexAndLocation4[0],\n          nextLocation = _getIndexAndLocation4[1];\n\n      if (blockers.length) {\n        if (nextIndex != null) {\n          var delta = index - nextIndex;\n\n          if (delta) {\n            // Revert the POP\n            blockedPopTx = {\n              action: nextAction,\n              location: nextLocation,\n              retry: function retry() {\n                go(delta * -1);\n              }\n            };\n            go(delta);\n          }\n        } else {\n          // Trying to POP to a location with no index. We did not create\n          // this location, so we can't effectively block the navigation.\n          process.env.NODE_ENV !== \"production\" ? warning(false, // TODO: Write up a doc that explains our blocking strategy in\n          // detail and link to it here so people can understand better\n          // what is going on and how to avoid it.\n          \"You are trying to block a POP navigation to a location that was not \" + \"created by the history library. The block will fail silently in \" + \"production, but in general you should do all navigation with the \" + \"history library (instead of using window.history.pushState directly) \" + \"to avoid this situation.\") : void 0;\n        }\n      } else {\n        applyTx(nextAction);\n      }\n    }\n  }\n\n  window.addEventListener(PopStateEventType, handlePop); // popstate does not fire on hashchange in IE 11 and old (trident) Edge\n  // https://developer.mozilla.org/de/docs/Web/API/Window/popstate_event\n\n  window.addEventListener(HashChangeEventType, function () {\n    var _getIndexAndLocation5 = getIndexAndLocation(),\n        nextLocation = _getIndexAndLocation5[1]; // Ignore extraneous hashchange events.\n\n\n    if (createPath(nextLocation) !== createPath(location)) {\n      handlePop();\n    }\n  });\n  var action = Action.Pop;\n\n  var _getIndexAndLocation6 = getIndexAndLocation(),\n      index = _getIndexAndLocation6[0],\n      location = _getIndexAndLocation6[1];\n\n  var listeners = createEvents();\n  var blockers = createEvents();\n\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState(_extends({}, globalHistory.state, {\n      idx: index\n    }), '');\n  }\n\n  function getBaseHref() {\n    var base = document.querySelector('base');\n    var href = '';\n\n    if (base && base.getAttribute('href')) {\n      var url = window.location.href;\n      var hashIndex = url.indexOf('#');\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n\n    return href;\n  }\n\n  function createHref(to) {\n    return getBaseHref() + '#' + (typeof to === 'string' ? to : createPath(to));\n  }\n\n  function getNextLocation(to, state) {\n    if (state === void 0) {\n      state = null;\n    }\n\n    return readOnly(_extends({\n      pathname: location.pathname,\n      hash: '',\n      search: ''\n    }, typeof to === 'string' ? parsePath(to) : to, {\n      state: state,\n      key: createKey()\n    }));\n  }\n\n  function getHistoryStateAndUrl(nextLocation, index) {\n    return [{\n      usr: nextLocation.state,\n      key: nextLocation.key,\n      idx: index\n    }, createHref(nextLocation)];\n  }\n\n  function allowTx(action, location, retry) {\n    return !blockers.length || (blockers.call({\n      action: action,\n      location: location,\n      retry: retry\n    }), false);\n  }\n\n  function applyTx(nextAction) {\n    action = nextAction;\n\n    var _getIndexAndLocation7 = getIndexAndLocation();\n\n    index = _getIndexAndLocation7[0];\n    location = _getIndexAndLocation7[1];\n    listeners.call({\n      action: action,\n      location: location\n    });\n  }\n\n  function push(to, state) {\n    var nextAction = Action.Push;\n    var nextLocation = getNextLocation(to, state);\n\n    function retry() {\n      push(to, state);\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(nextLocation.pathname.charAt(0) === '/', \"Relative pathnames are not supported in hash history.push(\" + JSON.stringify(to) + \")\") : void 0;\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      var _getHistoryStateAndUr3 = getHistoryStateAndUrl(nextLocation, index + 1),\n          historyState = _getHistoryStateAndUr3[0],\n          url = _getHistoryStateAndUr3[1]; // TODO: Support forced reloading\n      // try...catch because iOS limits us to 100 pushState calls :/\n\n\n      try {\n        globalHistory.pushState(historyState, '', url);\n      } catch (error) {\n        // They are going to lose state here, but there is no real\n        // way to warn them about it since the page will refresh...\n        window.location.assign(url);\n      }\n\n      applyTx(nextAction);\n    }\n  }\n\n  function replace(to, state) {\n    var nextAction = Action.Replace;\n    var nextLocation = getNextLocation(to, state);\n\n    function retry() {\n      replace(to, state);\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(nextLocation.pathname.charAt(0) === '/', \"Relative pathnames are not supported in hash history.replace(\" + JSON.stringify(to) + \")\") : void 0;\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      var _getHistoryStateAndUr4 = getHistoryStateAndUrl(nextLocation, index),\n          historyState = _getHistoryStateAndUr4[0],\n          url = _getHistoryStateAndUr4[1]; // TODO: Support forced reloading\n\n\n      globalHistory.replaceState(historyState, '', url);\n      applyTx(nextAction);\n    }\n  }\n\n  function go(delta) {\n    globalHistory.go(delta);\n  }\n\n  var history = {\n    get action() {\n      return action;\n    },\n\n    get location() {\n      return location;\n    },\n\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    back: function back() {\n      go(-1);\n    },\n    forward: function forward() {\n      go(1);\n    },\n    listen: function listen(listener) {\n      return listeners.push(listener);\n    },\n    block: function block(blocker) {\n      var unblock = blockers.push(blocker);\n\n      if (blockers.length === 1) {\n        window.addEventListener(BeforeUnloadEventType, promptBeforeUnload);\n      }\n\n      return function () {\n        unblock(); // Remove the beforeunload listener so the document may\n        // still be salvageable in the pagehide event.\n        // See https://html.spec.whatwg.org/#unloading-documents\n\n        if (!blockers.length) {\n          window.removeEventListener(BeforeUnloadEventType, promptBeforeUnload);\n        }\n      };\n    }\n  };\n  return history;\n}\n/**\r\n * Memory history stores the current location in memory. It is designed for use\r\n * in stateful non-browser environments like tests and React Native.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#creatememoryhistory\r\n */\n\nfunction createMemoryHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options3 = options,\n      _options3$initialEntr = _options3.initialEntries,\n      initialEntries = _options3$initialEntr === void 0 ? ['/'] : _options3$initialEntr,\n      initialIndex = _options3.initialIndex;\n  var entries = initialEntries.map(function (entry) {\n    var location = readOnly(_extends({\n      pathname: '/',\n      search: '',\n      hash: '',\n      state: null,\n      key: createKey()\n    }, typeof entry === 'string' ? parsePath(entry) : entry));\n    process.env.NODE_ENV !== \"production\" ? warning(location.pathname.charAt(0) === '/', \"Relative pathnames are not supported in createMemoryHistory({ initialEntries }) (invalid entry: \" + JSON.stringify(entry) + \")\") : void 0;\n    return location;\n  });\n  var index = clamp(initialIndex == null ? entries.length - 1 : initialIndex, 0, entries.length - 1);\n  var action = Action.Pop;\n  var location = entries[index];\n  var listeners = createEvents();\n  var blockers = createEvents();\n\n  function createHref(to) {\n    return typeof to === 'string' ? to : createPath(to);\n  }\n\n  function getNextLocation(to, state) {\n    if (state === void 0) {\n      state = null;\n    }\n\n    return readOnly(_extends({\n      pathname: location.pathname,\n      search: '',\n      hash: ''\n    }, typeof to === 'string' ? parsePath(to) : to, {\n      state: state,\n      key: createKey()\n    }));\n  }\n\n  function allowTx(action, location, retry) {\n    return !blockers.length || (blockers.call({\n      action: action,\n      location: location,\n      retry: retry\n    }), false);\n  }\n\n  function applyTx(nextAction, nextLocation) {\n    action = nextAction;\n    location = nextLocation;\n    listeners.call({\n      action: action,\n      location: location\n    });\n  }\n\n  function push(to, state) {\n    var nextAction = Action.Push;\n    var nextLocation = getNextLocation(to, state);\n\n    function retry() {\n      push(to, state);\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(location.pathname.charAt(0) === '/', \"Relative pathnames are not supported in memory history.push(\" + JSON.stringify(to) + \")\") : void 0;\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      applyTx(nextAction, nextLocation);\n    }\n  }\n\n  function replace(to, state) {\n    var nextAction = Action.Replace;\n    var nextLocation = getNextLocation(to, state);\n\n    function retry() {\n      replace(to, state);\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(location.pathname.charAt(0) === '/', \"Relative pathnames are not supported in memory history.replace(\" + JSON.stringify(to) + \")\") : void 0;\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      entries[index] = nextLocation;\n      applyTx(nextAction, nextLocation);\n    }\n  }\n\n  function go(delta) {\n    var nextIndex = clamp(index + delta, 0, entries.length - 1);\n    var nextAction = Action.Pop;\n    var nextLocation = entries[nextIndex];\n\n    function retry() {\n      go(delta);\n    }\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      index = nextIndex;\n      applyTx(nextAction, nextLocation);\n    }\n  }\n\n  var history = {\n    get index() {\n      return index;\n    },\n\n    get action() {\n      return action;\n    },\n\n    get location() {\n      return location;\n    },\n\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    back: function back() {\n      go(-1);\n    },\n    forward: function forward() {\n      go(1);\n    },\n    listen: function listen(listener) {\n      return listeners.push(listener);\n    },\n    block: function block(blocker) {\n      return blockers.push(blocker);\n    }\n  };\n  return history;\n} ////////////////////////////////////////////////////////////////////////////////\n// UTILS\n////////////////////////////////////////////////////////////////////////////////\n\nfunction clamp(n, lowerBound, upperBound) {\n  return Math.min(Math.max(n, lowerBound), upperBound);\n}\n\nfunction promptBeforeUnload(event) {\n  // Cancel the event.\n  event.preventDefault(); // Chrome (and legacy IE) requires returnValue to be set.\n\n  event.returnValue = '';\n}\n\nfunction createEvents() {\n  var handlers = [];\n  return {\n    get length() {\n      return handlers.length;\n    },\n\n    push: function push(fn) {\n      handlers.push(fn);\n      return function () {\n        handlers = handlers.filter(function (handler) {\n          return handler !== fn;\n        });\n      };\n    },\n    call: function call(arg) {\n      handlers.forEach(function (fn) {\n        return fn && fn(arg);\n      });\n    }\n  };\n}\n\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n/**\r\n * Creates a string URL path from the given pathname, search, and hash components.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createpath\r\n */\n\n\nfunction createPath(_ref) {\n  var _ref$pathname = _ref.pathname,\n      pathname = _ref$pathname === void 0 ? '/' : _ref$pathname,\n      _ref$search = _ref.search,\n      search = _ref$search === void 0 ? '' : _ref$search,\n      _ref$hash = _ref.hash,\n      hash = _ref$hash === void 0 ? '' : _ref$hash;\n  if (search && search !== '?') pathname += search.charAt(0) === '?' ? search : '?' + search;\n  if (hash && hash !== '#') pathname += hash.charAt(0) === '#' ? hash : '#' + hash;\n  return pathname;\n}\n/**\r\n * Parses a string URL path into its separate pathname, search, and hash components.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#parsepath\r\n */\n\nfunction parsePath(path) {\n  var parsedPath = {};\n\n  if (path) {\n    var hashIndex = path.indexOf('#');\n\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n\n    var searchIndex = path.indexOf('?');\n\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n\n  return parsedPath;\n}\n\nexport { Action, createBrowserHistory, createHashHistory, createMemoryHistory, createPath, parsePath };\n"]},"metadata":{},"sourceType":"module"}