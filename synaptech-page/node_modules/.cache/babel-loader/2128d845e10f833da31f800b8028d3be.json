{"ast":null,"code":"import _slicedToArray from \"C:/Users/strie/Documents/GitHub/uwsynaptech-website/synaptech-page/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\n/**\n * React Router v6.3.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { parsePath, createMemoryHistory, Action } from 'history';\nexport { Action as NavigationType, createPath, parsePath } from 'history';\nimport { createContext, useContext, useMemo, useRef, useEffect, useCallback, createElement, useState, useLayoutEffect, Children, isValidElement, Fragment } from 'react';\nvar NavigationContext = /*#__PURE__*/createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  NavigationContext.displayName = \"Navigation\";\n}\n\nvar LocationContext = /*#__PURE__*/createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  LocationContext.displayName = \"Location\";\n}\n\nvar RouteContext = /*#__PURE__*/createContext({\n  outlet: null,\n  matches: []\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  RouteContext.displayName = \"Route\";\n}\n\nfunction invariant(cond, message) {\n  if (!cond) throw new Error(message);\n}\n\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message); // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nvar alreadyWarned = {};\n\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    process.env.NODE_ENV !== \"production\" ? warning(false, message) : void 0;\n  }\n}\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/docs/en/v6/api#generatepath\n */\n\n\nfunction generatePath(path, params) {\n  if (params === void 0) {\n    params = {};\n  }\n\n  return path.replace(/:(\\w+)/g, function (_, key) {\n    !(params[key] != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Missing \\\":\" + key + \"\\\" param\") : invariant(false) : void 0;\n    return params[key];\n  }).replace(/\\/*\\*$/, function (_) {\n    return params[\"*\"] == null ? \"\" : params[\"*\"].replace(/^\\/*/, \"/\");\n  });\n}\n/**\n * A RouteMatch contains info about how a route matched a URL.\n */\n\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/docs/en/v6/api#matchroutes\n */\n\n\nfunction matchRoutes(routes, locationArg, basename) {\n  if (basename === void 0) {\n    basename = \"/\";\n  }\n\n  var location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n  var pathname = stripBasename(location.pathname || \"/\", basename);\n\n  if (pathname == null) {\n    return null;\n  }\n\n  var branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n  var matches = null;\n\n  for (var i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch(branches[i], pathname);\n  }\n\n  return matches;\n}\n\nfunction flattenRoutes(routes, branches, parentsMeta, parentPath) {\n  if (branches === void 0) {\n    branches = [];\n  }\n\n  if (parentsMeta === void 0) {\n    parentsMeta = [];\n  }\n\n  if (parentPath === void 0) {\n    parentPath = \"\";\n  }\n\n  routes.forEach(function (route, index) {\n    var meta = {\n      relativePath: route.path || \"\",\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route: route\n    };\n\n    if (meta.relativePath.startsWith(\"/\")) {\n      !meta.relativePath.startsWith(parentPath) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Absolute route path \\\"\" + meta.relativePath + \"\\\" nested under path \" + (\"\\\"\" + parentPath + \"\\\" is not valid. An absolute child route path \") + \"must start with the combined path of all its parent routes.\") : invariant(false) : void 0;\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n\n    var path = joinPaths([parentPath, meta.relativePath]);\n    var routesMeta = parentsMeta.concat(meta); // Add the children before adding this route to the array so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n\n    if (route.children && route.children.length > 0) {\n      !(route.index !== true) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Index routes must not have child routes. Please remove \" + (\"all child routes from route path \\\"\" + path + \"\\\".\")) : invariant(false) : void 0;\n      flattenRoutes(route.children, branches, routesMeta, path);\n    } // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n\n\n    if (route.path == null && !route.index) {\n      return;\n    }\n\n    branches.push({\n      path: path,\n      score: computeScore(path, route.index),\n      routesMeta: routesMeta\n    });\n  });\n  return branches;\n}\n\nfunction rankRouteBranches(branches) {\n  branches.sort(function (a, b) {\n    return a.score !== b.score ? b.score - a.score // Higher score first\n    : compareIndexes(a.routesMeta.map(function (meta) {\n      return meta.childrenIndex;\n    }), b.routesMeta.map(function (meta) {\n      return meta.childrenIndex;\n    }));\n  });\n}\n\nvar paramRe = /^:\\w+$/;\nvar dynamicSegmentValue = 3;\nvar indexRouteValue = 2;\nvar emptySegmentValue = 1;\nvar staticSegmentValue = 10;\nvar splatPenalty = -2;\n\nvar isSplat = function isSplat(s) {\n  return s === \"*\";\n};\n\nfunction computeScore(path, index) {\n  var segments = path.split(\"/\");\n  var initialScore = segments.length;\n\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n\n  return segments.filter(function (s) {\n    return !isSplat(s);\n  }).reduce(function (score, segment) {\n    return score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue);\n  }, initialScore);\n}\n\nfunction compareIndexes(a, b) {\n  var siblings = a.length === b.length && a.slice(0, -1).every(function (n, i) {\n    return n === b[i];\n  });\n  return siblings ? // If two routes are siblings, we should try to match the earlier sibling\n  // first. This allows people to have fine-grained control over the matching\n  // behavior by simply putting routes with identical paths in the order they\n  // want them tried.\n  a[a.length - 1] - b[b.length - 1] : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n  // so they sort equally.\n  0;\n}\n\nfunction matchRouteBranch(branch, pathname) {\n  var routesMeta = branch.routesMeta;\n  var matchedParams = {};\n  var matchedPathname = \"/\";\n  var matches = [];\n\n  for (var i = 0; i < routesMeta.length; ++i) {\n    var meta = routesMeta[i];\n    var end = i === routesMeta.length - 1;\n    var remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\n    var match = matchPath({\n      path: meta.relativePath,\n      caseSensitive: meta.caseSensitive,\n      end: end\n    }, remainingPathname);\n    if (!match) return null;\n    Object.assign(matchedParams, match.params);\n    var route = meta.route;\n    matches.push({\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(joinPaths([matchedPathname, match.pathnameBase])),\n      route: route\n    });\n\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n\n  return matches;\n}\n/**\n * A PathPattern is used to match on some portion of a URL pathname.\n */\n\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/docs/en/v6/api#matchpath\n */\n\n\nfunction matchPath(pattern, pathname) {\n  if (typeof pattern === \"string\") {\n    pattern = {\n      path: pattern,\n      caseSensitive: false,\n      end: true\n    };\n  }\n\n  var _compilePath = compilePath(pattern.path, pattern.caseSensitive, pattern.end),\n      _compilePath2 = _slicedToArray(_compilePath, 2),\n      matcher = _compilePath2[0],\n      paramNames = _compilePath2[1];\n\n  var match = pathname.match(matcher);\n  if (!match) return null;\n  var matchedPathname = match[0];\n  var pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  var captureGroups = match.slice(1);\n  var params = paramNames.reduce(function (memo, paramName, index) {\n    // We need to compute the pathnameBase here using the raw splat value\n    // instead of using params[\"*\"] later because it will be decoded then\n    if (paramName === \"*\") {\n      var splatValue = captureGroups[index] || \"\";\n      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\n    }\n\n    memo[paramName] = safelyDecodeURIComponent(captureGroups[index] || \"\", paramName);\n    return memo;\n  }, {});\n  return {\n    params: params,\n    pathname: matchedPathname,\n    pathnameBase: pathnameBase,\n    pattern: pattern\n  };\n}\n\nfunction compilePath(path, caseSensitive, end) {\n  if (caseSensitive === void 0) {\n    caseSensitive = false;\n  }\n\n  if (end === void 0) {\n    end = true;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"), \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\")) : void 0;\n  var paramNames = [];\n  var regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n  .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n  .replace(/[\\\\.*+^$?{}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n  .replace(/:(\\w+)/g, function (_, paramName) {\n    paramNames.push(paramName);\n    return \"([^\\\\/]+)\";\n  });\n\n  if (path.endsWith(\"*\")) {\n    paramNames.push(\"*\");\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" // Already matched the initial /, just match the rest\n    : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else {\n    regexpSource += end ? \"\\\\/*$\" // When matching to the end, ignore trailing slashes\n    : // Otherwise, match a word boundary or a proceeding /. The word boundary restricts\n    // parent routes to matching only their own words and nothing more, e.g. parent\n    // route \"/home\" should not match \"/home2\".\n    // Additionally, allow paths starting with `.`, `-`, `~`, and url-encoded entities,\n    // but do not consume the character in the matched path so they can match against\n    // nested paths.\n    \"(?:(?=[.~-]|%[0-9A-F]{2})|\\\\b|\\\\/|$)\";\n  }\n\n  var matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n  return [matcher, paramNames];\n}\n\nfunction safelyDecodeURIComponent(value, paramName) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, \"The value for the URL param \\\"\" + paramName + \"\\\" will not be decoded because\" + (\" the string \\\"\" + value + \"\\\" is a malformed URL segment. This is probably\") + (\" due to a bad percent encoding (\" + error + \").\")) : void 0;\n    return value;\n  }\n}\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/docs/en/v6/api#resolvepath\n */\n\n\nfunction resolvePath(to, fromPathname) {\n  if (fromPathname === void 0) {\n    fromPathname = \"/\";\n  }\n\n  var _ref5 = typeof to === \"string\" ? parsePath(to) : to,\n      toPathname = _ref5.pathname,\n      _ref5$search = _ref5.search,\n      search = _ref5$search === void 0 ? \"\" : _ref5$search,\n      _ref5$hash = _ref5.hash,\n      hash = _ref5$hash === void 0 ? \"\" : _ref5$hash;\n\n  var pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n  return {\n    pathname: pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\n\nfunction resolvePathname(relativePath, fromPathname) {\n  var segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  var relativeSegments = relativePath.split(\"/\");\n  relativeSegments.forEach(function (segment) {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\n\nfunction resolveTo(toArg, routePathnames, locationPathname) {\n  var to = typeof toArg === \"string\" ? parsePath(toArg) : toArg;\n  var toPathname = toArg === \"\" || to.pathname === \"\" ? \"/\" : to.pathname; // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n\n  var from;\n\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    var routePathnameIndex = routePathnames.length - 1;\n\n    if (toPathname.startsWith(\"..\")) {\n      var toSegments = toPathname.split(\"/\"); // Each leading .. segment means \"go up one route\" instead of \"go up one\n      // URL segment\".  This is a key difference from how <a href> works and a\n      // major reason we call this a \"to\" value instead of a \"href\".\n\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    } // If there are more \"..\" segments than parent routes, resolve relative to\n    // the root / URL.\n\n\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n\n  var path = resolvePath(to, from); // Ensure the pathname has a trailing slash if the original to value had one.\n\n  if (toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\") && !path.pathname.endsWith(\"/\")) {\n    path.pathname += \"/\";\n  }\n\n  return path;\n}\n\nfunction getToPathname(to) {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || to.pathname === \"\" ? \"/\" : typeof to === \"string\" ? parsePath(to).pathname : to.pathname;\n}\n\nfunction stripBasename(pathname, basename) {\n  if (basename === \"/\") return pathname;\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n\n  var nextChar = pathname.charAt(basename.length);\n\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n\n  return pathname.slice(basename.length) || \"/\";\n}\n\nvar joinPaths = function joinPaths(paths) {\n  return paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n};\n\nvar normalizePathname = function normalizePathname(pathname) {\n  return pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n};\n\nvar normalizeSearch = function normalizeSearch(search) {\n  return !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\n};\n\nvar normalizeHash = function normalizeHash(hash) {\n  return !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n};\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usehref\n */\n\n\nfunction useHref(to) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useHref() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n\n  var _useContext = useContext(NavigationContext),\n      basename = _useContext.basename,\n      navigator = _useContext.navigator;\n\n  var _useResolvedPath = useResolvedPath(to),\n      hash = _useResolvedPath.hash,\n      pathname = _useResolvedPath.pathname,\n      search = _useResolvedPath.search;\n\n  var joinedPathname = pathname;\n\n  if (basename !== \"/\") {\n    var toPathname = getToPathname(to);\n    var endsWithSlash = toPathname != null && toPathname.endsWith(\"/\");\n    joinedPathname = pathname === \"/\" ? basename + (endsWithSlash ? \"/\" : \"\") : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({\n    pathname: joinedPathname,\n    search: search,\n    hash: hash\n  });\n}\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useinroutercontext\n */\n\n\nfunction useInRouterContext() {\n  return useContext(LocationContext) != null;\n}\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/docs/en/v6/api#uselocation\n */\n\n\nfunction useLocation() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useLocation() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  return useContext(LocationContext).location;\n}\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usenavigationtype\n */\n\n\nfunction useNavigationType() {\n  return useContext(LocationContext).navigationType;\n}\n/**\n * Returns true if the URL for the given \"to\" value matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usematch\n */\n\n\nfunction useMatch(pattern) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useMatch() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n\n  var _useLocation = useLocation(),\n      pathname = _useLocation.pathname;\n\n  return useMemo(function () {\n    return matchPath(pattern, pathname);\n  }, [pathname, pattern]);\n}\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usenavigate\n */\n\n\nfunction useNavigate() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useNavigate() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n\n  var _useContext2 = useContext(NavigationContext),\n      basename = _useContext2.basename,\n      navigator = _useContext2.navigator;\n\n  var _useContext3 = useContext(RouteContext),\n      matches = _useContext3.matches;\n\n  var _useLocation2 = useLocation(),\n      locationPathname = _useLocation2.pathname;\n\n  var routePathnamesJson = JSON.stringify(matches.map(function (match) {\n    return match.pathnameBase;\n  }));\n  var activeRef = useRef(false);\n  useEffect(function () {\n    activeRef.current = true;\n  });\n  var navigate = useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(activeRef.current, \"You should call navigate() in a React.useEffect(), not when \" + \"your component is first rendered.\") : void 0;\n    if (!activeRef.current) return;\n\n    if (typeof to === \"number\") {\n      navigator.go(to);\n      return;\n    }\n\n    var path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname);\n\n    if (basename !== \"/\") {\n      path.pathname = joinPaths([basename, path.pathname]);\n    }\n\n    (!!options.replace ? navigator.replace : navigator.push)(path, options.state);\n  }, [basename, navigator, routePathnamesJson, locationPathname]);\n  return navigate;\n}\n\nvar OutletContext = /*#__PURE__*/createContext(null);\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/docs/en/v6/api#useoutletcontext\n */\n\nfunction useOutletContext() {\n  return useContext(OutletContext);\n}\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useoutlet\n */\n\n\nfunction useOutlet(context) {\n  var outlet = useContext(RouteContext).outlet;\n\n  if (outlet) {\n    return /*#__PURE__*/createElement(OutletContext.Provider, {\n      value: context\n    }, outlet);\n  }\n\n  return outlet;\n}\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useparams\n */\n\n\nfunction useParams() {\n  var _useContext4 = useContext(RouteContext),\n      matches = _useContext4.matches;\n\n  var routeMatch = matches[matches.length - 1];\n  return routeMatch ? routeMatch.params : {};\n}\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useresolvedpath\n */\n\n\nfunction useResolvedPath(to) {\n  var _useContext5 = useContext(RouteContext),\n      matches = _useContext5.matches;\n\n  var _useLocation3 = useLocation(),\n      locationPathname = _useLocation3.pathname;\n\n  var routePathnamesJson = JSON.stringify(matches.map(function (match) {\n    return match.pathnameBase;\n  }));\n  return useMemo(function () {\n    return resolveTo(to, JSON.parse(routePathnamesJson), locationPathname);\n  }, [to, routePathnamesJson, locationPathname]);\n}\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useroutes\n */\n\n\nfunction useRoutes(routes, locationArg) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useRoutes() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n\n  var _useContext6 = useContext(RouteContext),\n      parentMatches = _useContext6.matches;\n\n  var routeMatch = parentMatches[parentMatches.length - 1];\n  var parentParams = routeMatch ? routeMatch.params : {};\n  var parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  var parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  var parentRoute = routeMatch && routeMatch.route;\n\n  if (process.env.NODE_ENV !== \"production\") {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    var parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(parentPathname, !parentRoute || parentPath.endsWith(\"*\"), \"You rendered descendant <Routes> (or called `useRoutes()`) at \" + (\"\\\"\" + parentPathname + \"\\\" (under <Route path=\\\"\" + parentPath + \"\\\">) but the \") + \"parent route path has no trailing \\\"*\\\". This means if you navigate \" + \"deeper, the parent won't match anymore and therefore the child \" + \"routes will never render.\\n\\n\" + (\"Please change the parent <Route path=\\\"\" + parentPath + \"\\\"> to <Route \") + (\"path=\\\"\" + (parentPath === \"/\" ? \"*\" : parentPath + \"/*\") + \"\\\">.\"));\n  }\n\n  var locationFromContext = useLocation();\n  var location;\n\n  if (locationArg) {\n    var _parsedLocationArg$pa;\n\n    var parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    !(parentPathnameBase === \"/\" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, \" + \"the location pathname must begin with the portion of the URL pathname that was \" + (\"matched by all parent routes. The current pathname base is \\\"\" + parentPathnameBase + \"\\\" \") + (\"but pathname \\\"\" + parsedLocationArg.pathname + \"\\\" was given in the `location` prop.\")) : invariant(false) : void 0;\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  var pathname = location.pathname || \"/\";\n  var remainingPathname = parentPathnameBase === \"/\" ? pathname : pathname.slice(parentPathnameBase.length) || \"/\";\n  var matches = matchRoutes(routes, {\n    pathname: remainingPathname\n  });\n\n  if (process.env.NODE_ENV !== \"production\") {\n    process.env.NODE_ENV !== \"production\" ? warning(parentRoute || matches != null, \"No routes matched location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \") : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(matches == null || matches[matches.length - 1].route.element !== undefined, \"Matched leaf route at location \\\"\" + location.pathname + location.search + location.hash + \"\\\" does not have an element. \" + \"This means it will render an <Outlet /> with a null value by default resulting in an \\\"empty\\\" page.\") : void 0;\n  }\n\n  return _renderMatches(matches && matches.map(function (match) {\n    return Object.assign({}, match, {\n      params: Object.assign({}, parentParams, match.params),\n      pathname: joinPaths([parentPathnameBase, match.pathname]),\n      pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([parentPathnameBase, match.pathnameBase])\n    });\n  }), parentMatches);\n}\n\nfunction _renderMatches(matches, parentMatches) {\n  if (parentMatches === void 0) {\n    parentMatches = [];\n  }\n\n  if (matches == null) return null;\n  return matches.reduceRight(function (outlet, match, index) {\n    return /*#__PURE__*/createElement(RouteContext.Provider, {\n      children: match.route.element !== undefined ? match.route.element : outlet,\n      value: {\n        outlet: outlet,\n        matches: parentMatches.concat(matches.slice(0, index + 1))\n      }\n    });\n  }, null);\n}\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/docs/en/v6/api#memoryrouter\n */\n\n\nfunction MemoryRouter(_ref) {\n  var basename = _ref.basename,\n      children = _ref.children,\n      initialEntries = _ref.initialEntries,\n      initialIndex = _ref.initialIndex;\n  var historyRef = useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries: initialEntries,\n      initialIndex: initialIndex\n    });\n  }\n\n  var history = historyRef.current;\n\n  var _useState = useState({\n    action: history.action,\n    location: history.location\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  useLayoutEffect(function () {\n    return history.listen(setState);\n  }, [history]);\n  return /*#__PURE__*/createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/docs/en/v6/api#navigate\n */\n\n\nfunction Navigate(_ref2) {\n  var to = _ref2.to,\n      replace = _ref2.replace,\n      state = _ref2.state;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of\n  // the router loaded. We can help them understand how to avoid that.\n  \"<Navigate> may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  process.env.NODE_ENV !== \"production\" ? warning(!useContext(NavigationContext).static, \"<Navigate> must not be used on the initial render in a <StaticRouter>. \" + \"This is a no-op, but you should modify your code so the <Navigate> is \" + \"only ever rendered in response to some user interaction or state change.\") : void 0;\n  var navigate = useNavigate();\n  useEffect(function () {\n    navigate(to, {\n      replace: replace,\n      state: state\n    });\n  });\n  return null;\n}\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/docs/en/v6/api#outlet\n */\n\n\nfunction Outlet(props) {\n  return useOutlet(props.context);\n}\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/docs/en/v6/api#route\n */\n\n\nfunction Route(_props) {\n  process.env.NODE_ENV !== \"production\" ? invariant(false, \"A <Route> is only ever to be used as the child of <Routes> element, \" + \"never rendered directly. Please wrap your <Route> in a <Routes>.\") : invariant(false);\n}\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/docs/en/v6/api#router\n */\n\n\nfunction Router(_ref3) {\n  var _ref3$basename = _ref3.basename,\n      basenameProp = _ref3$basename === void 0 ? \"/\" : _ref3$basename,\n      _ref3$children = _ref3.children,\n      children = _ref3$children === void 0 ? null : _ref3$children,\n      locationProp = _ref3.location,\n      _ref3$navigationType = _ref3.navigationType,\n      navigationType = _ref3$navigationType === void 0 ? Action.Pop : _ref3$navigationType,\n      navigator = _ref3.navigator,\n      _ref3$static = _ref3.static,\n      staticProp = _ref3$static === void 0 ? false : _ref3$static;\n  !!useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"You cannot render a <Router> inside another <Router>.\" + \" You should never have more than one in your app.\") : invariant(false) : void 0;\n  var basename = normalizePathname(basenameProp);\n  var navigationContext = useMemo(function () {\n    return {\n      basename: basename,\n      navigator: navigator,\n      static: staticProp\n    };\n  }, [basename, navigator, staticProp]);\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  var _locationProp = locationProp,\n      _locationProp$pathnam = _locationProp.pathname,\n      pathname = _locationProp$pathnam === void 0 ? \"/\" : _locationProp$pathnam,\n      _locationProp$search = _locationProp.search,\n      search = _locationProp$search === void 0 ? \"\" : _locationProp$search,\n      _locationProp$hash = _locationProp.hash,\n      hash = _locationProp$hash === void 0 ? \"\" : _locationProp$hash,\n      _locationProp$state = _locationProp.state,\n      state = _locationProp$state === void 0 ? null : _locationProp$state,\n      _locationProp$key = _locationProp.key,\n      key = _locationProp$key === void 0 ? \"default\" : _locationProp$key;\n  var location = useMemo(function () {\n    var trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      pathname: trailingPathname,\n      search: search,\n      hash: hash,\n      state: state,\n      key: key\n    };\n  }, [basename, pathname, search, hash, state, key]);\n  process.env.NODE_ENV !== \"production\" ? warning(location != null, \"<Router basename=\\\"\" + basename + \"\\\"> is not able to match the URL \" + (\"\\\"\" + pathname + search + hash + \"\\\" because it does not start with the \") + \"basename, so the <Router> won't render anything.\") : void 0;\n\n  if (location == null) {\n    return null;\n  }\n\n  return /*#__PURE__*/createElement(NavigationContext.Provider, {\n    value: navigationContext\n  }, /*#__PURE__*/createElement(LocationContext.Provider, {\n    children: children,\n    value: {\n      location: location,\n      navigationType: navigationType\n    }\n  }));\n}\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/docs/en/v6/api#routes\n */\n\n\nfunction Routes(_ref4) {\n  var children = _ref4.children,\n      location = _ref4.location;\n  return useRoutes(createRoutesFromChildren(children), location);\n} ///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/docs/en/v6/api#createroutesfromchildren\n */\n\n\nfunction createRoutesFromChildren(children) {\n  var routes = [];\n  Children.forEach(children, function (element) {\n    if (! /*#__PURE__*/isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    if (element.type === Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(routes, createRoutesFromChildren(element.props.children));\n      return;\n    }\n\n    !(element.type === Route) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"[\" + (typeof element.type === \"string\" ? element.type : element.type.name) + \"] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>\") : invariant(false) : void 0;\n    var route = {\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      index: element.props.index,\n      path: element.props.path\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children);\n    }\n\n    routes.push(route);\n  });\n  return routes;\n}\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\n\n\nfunction renderMatches(matches) {\n  return _renderMatches(matches);\n}\n\nexport { MemoryRouter, Navigate, Outlet, Route, Router, Routes, LocationContext as UNSAFE_LocationContext, NavigationContext as UNSAFE_NavigationContext, RouteContext as UNSAFE_RouteContext, createRoutesFromChildren, generatePath, matchPath, matchRoutes, renderMatches, resolvePath, useHref, useInRouterContext, useLocation, useMatch, useNavigate, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRoutes };","map":{"version":3,"mappings":"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","names":["parsePath","createMemoryHistory","Action","NavigationType","createPath","createContext","useContext","useMemo","useRef","useEffect","useCallback","createElement","useState","useLayoutEffect","Children","isValidElement","Fragment","NavigationContext","process","env","NODE_ENV","displayName","LocationContext","RouteContext","outlet","matches","invariant","cond","message","Error","warning","console","warn","e","alreadyWarned","warningOnce","key","generatePath","path","params","replace","_","matchRoutes","routes","locationArg","basename","location","pathname","stripBasename","branches","flattenRoutes","rankRouteBranches","i","length","matchRouteBranch","parentsMeta","parentPath","forEach","route","index","meta","relativePath","caseSensitive","childrenIndex","startsWith","slice","joinPaths","routesMeta","concat","children","push","score","computeScore","sort","a","b","compareIndexes","map","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","s","segments","split","initialScore","some","filter","reduce","segment","test","siblings","every","n","branch","matchedParams","matchedPathname","end","remainingPathname","match","matchPath","Object","assign","pathnameBase","normalizePathname","pattern","compilePath","matcher","paramNames","captureGroups","memo","paramName","splatValue","safelyDecodeURIComponent","endsWith","regexpSource","RegExp","undefined","value","decodeURIComponent","error","resolvePath","to","fromPathname","toPathname","search","hash","resolvePathname","normalizeSearch","normalizeHash","relativeSegments","pop","join","resolveTo","toArg","routePathnames","locationPathname","from","routePathnameIndex","toSegments","shift","getToPathname","toLowerCase","nextChar","charAt","paths","useHref","useInRouterContext","navigator","useResolvedPath","joinedPathname","endsWithSlash","createHref","useLocation","useNavigationType","navigationType","useMatch","useNavigate","routePathnamesJson","JSON","stringify","activeRef","current","navigate","options","go","parse","state","OutletContext","useOutletContext","useOutlet","context","Provider","useParams","routeMatch","useRoutes","parentMatches","parentParams","parentPathname","parentPathnameBase","parentRoute","locationFromContext","_parsedLocationArg$pa","parsedLocationArg","element","_renderMatches","reduceRight","MemoryRouter","_ref","initialEntries","initialIndex","historyRef","history","action","setState","listen","Router","Navigate","_ref2","static","Outlet","props","Route","_props","_ref3","basenameProp","locationProp","Pop","staticProp","navigationContext","trailingPathname","Routes","_ref4","createRoutesFromChildren","type","apply","name","renderMatches","UNSAFE_LocationContext","UNSAFE_NavigationContext","UNSAFE_RouteContext"],"sources":["C:/Users/strie/Documents/GitHub/uwsynaptech-website/synaptech-page/node_modules/react-router/index.js"],"sourcesContent":["/**\n * React Router v6.3.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { parsePath, createMemoryHistory, Action } from 'history';\nexport { Action as NavigationType, createPath, parsePath } from 'history';\nimport { createContext, useContext, useMemo, useRef, useEffect, useCallback, createElement, useState, useLayoutEffect, Children, isValidElement, Fragment } from 'react';\n\nconst NavigationContext = /*#__PURE__*/createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  NavigationContext.displayName = \"Navigation\";\n}\n\nconst LocationContext = /*#__PURE__*/createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  LocationContext.displayName = \"Location\";\n}\n\nconst RouteContext = /*#__PURE__*/createContext({\n  outlet: null,\n  matches: []\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  RouteContext.displayName = \"Route\";\n}\n\nfunction invariant(cond, message) {\n  if (!cond) throw new Error(message);\n}\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message); // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\nconst alreadyWarned = {};\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    process.env.NODE_ENV !== \"production\" ? warning(false, message) : void 0;\n  }\n}\n\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/docs/en/v6/api#generatepath\n */\nfunction generatePath(path, params) {\n  if (params === void 0) {\n    params = {};\n  }\n\n  return path.replace(/:(\\w+)/g, (_, key) => {\n    !(params[key] != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Missing \\\":\" + key + \"\\\" param\") : invariant(false) : void 0;\n    return params[key];\n  }).replace(/\\/*\\*$/, _ => params[\"*\"] == null ? \"\" : params[\"*\"].replace(/^\\/*/, \"/\"));\n}\n/**\n * A RouteMatch contains info about how a route matched a URL.\n */\n\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/docs/en/v6/api#matchroutes\n */\nfunction matchRoutes(routes, locationArg, basename) {\n  if (basename === void 0) {\n    basename = \"/\";\n  }\n\n  let location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n\n  if (pathname == null) {\n    return null;\n  }\n\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n  let matches = null;\n\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch(branches[i], pathname);\n  }\n\n  return matches;\n}\n\nfunction flattenRoutes(routes, branches, parentsMeta, parentPath) {\n  if (branches === void 0) {\n    branches = [];\n  }\n\n  if (parentsMeta === void 0) {\n    parentsMeta = [];\n  }\n\n  if (parentPath === void 0) {\n    parentPath = \"\";\n  }\n\n  routes.forEach((route, index) => {\n    let meta = {\n      relativePath: route.path || \"\",\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route\n    };\n\n    if (meta.relativePath.startsWith(\"/\")) {\n      !meta.relativePath.startsWith(parentPath) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Absolute route path \\\"\" + meta.relativePath + \"\\\" nested under path \" + (\"\\\"\" + parentPath + \"\\\" is not valid. An absolute child route path \") + \"must start with the combined path of all its parent routes.\") : invariant(false) : void 0;\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta); // Add the children before adding this route to the array so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n\n    if (route.children && route.children.length > 0) {\n      !(route.index !== true) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Index routes must not have child routes. Please remove \" + (\"all child routes from route path \\\"\" + path + \"\\\".\")) : invariant(false) : void 0;\n      flattenRoutes(route.children, branches, routesMeta, path);\n    } // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n\n\n    if (route.path == null && !route.index) {\n      return;\n    }\n\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta\n    });\n  });\n  return branches;\n}\n\nfunction rankRouteBranches(branches) {\n  branches.sort((a, b) => a.score !== b.score ? b.score - a.score // Higher score first\n  : compareIndexes(a.routesMeta.map(meta => meta.childrenIndex), b.routesMeta.map(meta => meta.childrenIndex)));\n}\n\nconst paramRe = /^:\\w+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\n\nconst isSplat = s => s === \"*\";\n\nfunction computeScore(path, index) {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n\n  return segments.filter(s => !isSplat(s)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue), initialScore);\n}\n\nfunction compareIndexes(a, b) {\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n  return siblings ? // If two routes are siblings, we should try to match the earlier sibling\n  // first. This allows people to have fine-grained control over the matching\n  // behavior by simply putting routes with identical paths in the order they\n  // want them tried.\n  a[a.length - 1] - b[b.length - 1] : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n  // so they sort equally.\n  0;\n}\n\nfunction matchRouteBranch(branch, pathname) {\n  let {\n    routesMeta\n  } = branch;\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches = [];\n\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath({\n      path: meta.relativePath,\n      caseSensitive: meta.caseSensitive,\n      end\n    }, remainingPathname);\n    if (!match) return null;\n    Object.assign(matchedParams, match.params);\n    let route = meta.route;\n    matches.push({\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(joinPaths([matchedPathname, match.pathnameBase])),\n      route\n    });\n\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n\n  return matches;\n}\n/**\n * A PathPattern is used to match on some portion of a URL pathname.\n */\n\n\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/docs/en/v6/api#matchpath\n */\nfunction matchPath(pattern, pathname) {\n  if (typeof pattern === \"string\") {\n    pattern = {\n      path: pattern,\n      caseSensitive: false,\n      end: true\n    };\n  }\n\n  let [matcher, paramNames] = compilePath(pattern.path, pattern.caseSensitive, pattern.end);\n  let match = pathname.match(matcher);\n  if (!match) return null;\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params = paramNames.reduce((memo, paramName, index) => {\n    // We need to compute the pathnameBase here using the raw splat value\n    // instead of using params[\"*\"] later because it will be decoded then\n    if (paramName === \"*\") {\n      let splatValue = captureGroups[index] || \"\";\n      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\n    }\n\n    memo[paramName] = safelyDecodeURIComponent(captureGroups[index] || \"\", paramName);\n    return memo;\n  }, {});\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern\n  };\n}\n\nfunction compilePath(path, caseSensitive, end) {\n  if (caseSensitive === void 0) {\n    caseSensitive = false;\n  }\n\n  if (end === void 0) {\n    end = true;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"), \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\")) : void 0;\n  let paramNames = [];\n  let regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n  .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n  .replace(/[\\\\.*+^$?{}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n  .replace(/:(\\w+)/g, (_, paramName) => {\n    paramNames.push(paramName);\n    return \"([^\\\\/]+)\";\n  });\n\n  if (path.endsWith(\"*\")) {\n    paramNames.push(\"*\");\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" // Already matched the initial /, just match the rest\n    : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else {\n    regexpSource += end ? \"\\\\/*$\" // When matching to the end, ignore trailing slashes\n    : // Otherwise, match a word boundary or a proceeding /. The word boundary restricts\n    // parent routes to matching only their own words and nothing more, e.g. parent\n    // route \"/home\" should not match \"/home2\".\n    // Additionally, allow paths starting with `.`, `-`, `~`, and url-encoded entities,\n    // but do not consume the character in the matched path so they can match against\n    // nested paths.\n    \"(?:(?=[.~-]|%[0-9A-F]{2})|\\\\b|\\\\/|$)\";\n  }\n\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n  return [matcher, paramNames];\n}\n\nfunction safelyDecodeURIComponent(value, paramName) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, \"The value for the URL param \\\"\" + paramName + \"\\\" will not be decoded because\" + (\" the string \\\"\" + value + \"\\\" is a malformed URL segment. This is probably\") + (\" due to a bad percent encoding (\" + error + \").\")) : void 0;\n    return value;\n  }\n}\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/docs/en/v6/api#resolvepath\n */\n\n\nfunction resolvePath(to, fromPathname) {\n  if (fromPathname === void 0) {\n    fromPathname = \"/\";\n  }\n\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\"\n  } = typeof to === \"string\" ? parsePath(to) : to;\n  let pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\n\nfunction resolvePathname(relativePath, fromPathname) {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n  relativeSegments.forEach(segment => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\n\nfunction resolveTo(toArg, routePathnames, locationPathname) {\n  let to = typeof toArg === \"string\" ? parsePath(toArg) : toArg;\n  let toPathname = toArg === \"\" || to.pathname === \"\" ? \"/\" : to.pathname; // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n\n  let from;\n\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n\n    if (toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\"); // Each leading .. segment means \"go up one route\" instead of \"go up one\n      // URL segment\".  This is a key difference from how <a href> works and a\n      // major reason we call this a \"to\" value instead of a \"href\".\n\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    } // If there are more \"..\" segments than parent routes, resolve relative to\n    // the root / URL.\n\n\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n\n  let path = resolvePath(to, from); // Ensure the pathname has a trailing slash if the original to value had one.\n\n  if (toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\") && !path.pathname.endsWith(\"/\")) {\n    path.pathname += \"/\";\n  }\n\n  return path;\n}\nfunction getToPathname(to) {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || to.pathname === \"\" ? \"/\" : typeof to === \"string\" ? parsePath(to).pathname : to.pathname;\n}\nfunction stripBasename(pathname, basename) {\n  if (basename === \"/\") return pathname;\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n\n  let nextChar = pathname.charAt(basename.length);\n\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n\n  return pathname.slice(basename.length) || \"/\";\n}\nconst joinPaths = paths => paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\nconst normalizePathname = pathname => pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n\nconst normalizeSearch = search => !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\n\nconst normalizeHash = hash => !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usehref\n */\n\nfunction useHref(to) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useHref() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  let {\n    basename,\n    navigator\n  } = useContext(NavigationContext);\n  let {\n    hash,\n    pathname,\n    search\n  } = useResolvedPath(to);\n  let joinedPathname = pathname;\n\n  if (basename !== \"/\") {\n    let toPathname = getToPathname(to);\n    let endsWithSlash = toPathname != null && toPathname.endsWith(\"/\");\n    joinedPathname = pathname === \"/\" ? basename + (endsWithSlash ? \"/\" : \"\") : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({\n    pathname: joinedPathname,\n    search,\n    hash\n  });\n}\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useinroutercontext\n */\n\nfunction useInRouterContext() {\n  return useContext(LocationContext) != null;\n}\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/docs/en/v6/api#uselocation\n */\n\nfunction useLocation() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useLocation() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  return useContext(LocationContext).location;\n}\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usenavigationtype\n */\n\nfunction useNavigationType() {\n  return useContext(LocationContext).navigationType;\n}\n/**\n * Returns true if the URL for the given \"to\" value matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usematch\n */\n\nfunction useMatch(pattern) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useMatch() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  let {\n    pathname\n  } = useLocation();\n  return useMemo(() => matchPath(pattern, pathname), [pathname, pattern]);\n}\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usenavigate\n */\nfunction useNavigate() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useNavigate() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  let {\n    basename,\n    navigator\n  } = useContext(NavigationContext);\n  let {\n    matches\n  } = useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(matches.map(match => match.pathnameBase));\n  let activeRef = useRef(false);\n  useEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(activeRef.current, \"You should call navigate() in a React.useEffect(), not when \" + \"your component is first rendered.\") : void 0;\n    if (!activeRef.current) return;\n\n    if (typeof to === \"number\") {\n      navigator.go(to);\n      return;\n    }\n\n    let path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname);\n\n    if (basename !== \"/\") {\n      path.pathname = joinPaths([basename, path.pathname]);\n    }\n\n    (!!options.replace ? navigator.replace : navigator.push)(path, options.state);\n  }, [basename, navigator, routePathnamesJson, locationPathname]);\n  return navigate;\n}\nconst OutletContext = /*#__PURE__*/createContext(null);\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/docs/en/v6/api#useoutletcontext\n */\n\nfunction useOutletContext() {\n  return useContext(OutletContext);\n}\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useoutlet\n */\n\nfunction useOutlet(context) {\n  let outlet = useContext(RouteContext).outlet;\n\n  if (outlet) {\n    return /*#__PURE__*/createElement(OutletContext.Provider, {\n      value: context\n    }, outlet);\n  }\n\n  return outlet;\n}\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useparams\n */\n\nfunction useParams() {\n  let {\n    matches\n  } = useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? routeMatch.params : {};\n}\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useresolvedpath\n */\n\nfunction useResolvedPath(to) {\n  let {\n    matches\n  } = useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(matches.map(match => match.pathnameBase));\n  return useMemo(() => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname), [to, routePathnamesJson, locationPathname]);\n}\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useroutes\n */\n\nfunction useRoutes(routes, locationArg) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useRoutes() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  let {\n    matches: parentMatches\n  } = useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (process.env.NODE_ENV !== \"production\") {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(parentPathname, !parentRoute || parentPath.endsWith(\"*\"), \"You rendered descendant <Routes> (or called `useRoutes()`) at \" + (\"\\\"\" + parentPathname + \"\\\" (under <Route path=\\\"\" + parentPath + \"\\\">) but the \") + \"parent route path has no trailing \\\"*\\\". This means if you navigate \" + \"deeper, the parent won't match anymore and therefore the child \" + \"routes will never render.\\n\\n\" + (\"Please change the parent <Route path=\\\"\" + parentPath + \"\\\"> to <Route \") + (\"path=\\\"\" + (parentPath === \"/\" ? \"*\" : parentPath + \"/*\") + \"\\\">.\"));\n  }\n\n  let locationFromContext = useLocation();\n  let location;\n\n  if (locationArg) {\n    var _parsedLocationArg$pa;\n\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    !(parentPathnameBase === \"/\" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, \" + \"the location pathname must begin with the portion of the URL pathname that was \" + (\"matched by all parent routes. The current pathname base is \\\"\" + parentPathnameBase + \"\\\" \") + (\"but pathname \\\"\" + parsedLocationArg.pathname + \"\\\" was given in the `location` prop.\")) : invariant(false) : void 0;\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n  let remainingPathname = parentPathnameBase === \"/\" ? pathname : pathname.slice(parentPathnameBase.length) || \"/\";\n  let matches = matchRoutes(routes, {\n    pathname: remainingPathname\n  });\n\n  if (process.env.NODE_ENV !== \"production\") {\n    process.env.NODE_ENV !== \"production\" ? warning(parentRoute || matches != null, \"No routes matched location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \") : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(matches == null || matches[matches.length - 1].route.element !== undefined, \"Matched leaf route at location \\\"\" + location.pathname + location.search + location.hash + \"\\\" does not have an element. \" + \"This means it will render an <Outlet /> with a null value by default resulting in an \\\"empty\\\" page.\") : void 0;\n  }\n\n  return _renderMatches(matches && matches.map(match => Object.assign({}, match, {\n    params: Object.assign({}, parentParams, match.params),\n    pathname: joinPaths([parentPathnameBase, match.pathname]),\n    pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([parentPathnameBase, match.pathnameBase])\n  })), parentMatches);\n}\nfunction _renderMatches(matches, parentMatches) {\n  if (parentMatches === void 0) {\n    parentMatches = [];\n  }\n\n  if (matches == null) return null;\n  return matches.reduceRight((outlet, match, index) => {\n    return /*#__PURE__*/createElement(RouteContext.Provider, {\n      children: match.route.element !== undefined ? match.route.element : outlet,\n      value: {\n        outlet,\n        matches: parentMatches.concat(matches.slice(0, index + 1))\n      }\n    });\n  }, null);\n}\n\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/docs/en/v6/api#memoryrouter\n */\nfunction MemoryRouter(_ref) {\n  let {\n    basename,\n    children,\n    initialEntries,\n    initialIndex\n  } = _ref;\n  let historyRef = useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = useState({\n    action: history.action,\n    location: history.location\n  });\n  useLayoutEffect(() => history.listen(setState), [history]);\n  return /*#__PURE__*/createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/docs/en/v6/api#navigate\n */\nfunction Navigate(_ref2) {\n  let {\n    to,\n    replace,\n    state\n  } = _ref2;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of\n  // the router loaded. We can help them understand how to avoid that.\n  \"<Navigate> may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  process.env.NODE_ENV !== \"production\" ? warning(!useContext(NavigationContext).static, \"<Navigate> must not be used on the initial render in a <StaticRouter>. \" + \"This is a no-op, but you should modify your code so the <Navigate> is \" + \"only ever rendered in response to some user interaction or state change.\") : void 0;\n  let navigate = useNavigate();\n  useEffect(() => {\n    navigate(to, {\n      replace,\n      state\n    });\n  });\n  return null;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/docs/en/v6/api#outlet\n */\nfunction Outlet(props) {\n  return useOutlet(props.context);\n}\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/docs/en/v6/api#route\n */\nfunction Route(_props) {\n   process.env.NODE_ENV !== \"production\" ? invariant(false, \"A <Route> is only ever to be used as the child of <Routes> element, \" + \"never rendered directly. Please wrap your <Route> in a <Routes>.\") : invariant(false) ;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/docs/en/v6/api#router\n */\nfunction Router(_ref3) {\n  let {\n    basename: basenameProp = \"/\",\n    children = null,\n    location: locationProp,\n    navigationType = Action.Pop,\n    navigator,\n    static: staticProp = false\n  } = _ref3;\n  !!useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"You cannot render a <Router> inside another <Router>.\" + \" You should never have more than one in your app.\") : invariant(false) : void 0;\n  let basename = normalizePathname(basenameProp);\n  let navigationContext = useMemo(() => ({\n    basename,\n    navigator,\n    static: staticProp\n  }), [basename, navigator, staticProp]);\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\"\n  } = locationProp;\n  let location = useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      pathname: trailingPathname,\n      search,\n      hash,\n      state,\n      key\n    };\n  }, [basename, pathname, search, hash, state, key]);\n  process.env.NODE_ENV !== \"production\" ? warning(location != null, \"<Router basename=\\\"\" + basename + \"\\\"> is not able to match the URL \" + (\"\\\"\" + pathname + search + hash + \"\\\" because it does not start with the \") + \"basename, so the <Router> won't render anything.\") : void 0;\n\n  if (location == null) {\n    return null;\n  }\n\n  return /*#__PURE__*/createElement(NavigationContext.Provider, {\n    value: navigationContext\n  }, /*#__PURE__*/createElement(LocationContext.Provider, {\n    children: children,\n    value: {\n      location,\n      navigationType\n    }\n  }));\n}\n\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/docs/en/v6/api#routes\n */\nfunction Routes(_ref4) {\n  let {\n    children,\n    location\n  } = _ref4;\n  return useRoutes(createRoutesFromChildren(children), location);\n} ///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/docs/en/v6/api#createroutesfromchildren\n */\n\nfunction createRoutesFromChildren(children) {\n  let routes = [];\n  Children.forEach(children, element => {\n    if (! /*#__PURE__*/isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    if (element.type === Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(routes, createRoutesFromChildren(element.props.children));\n      return;\n    }\n\n    !(element.type === Route) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"[\" + (typeof element.type === \"string\" ? element.type : element.type.name) + \"] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>\") : invariant(false) : void 0;\n    let route = {\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      index: element.props.index,\n      path: element.props.path\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children);\n    }\n\n    routes.push(route);\n  });\n  return routes;\n}\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\n\nfunction renderMatches(matches) {\n  return _renderMatches(matches);\n}\n\nexport { MemoryRouter, Navigate, Outlet, Route, Router, Routes, LocationContext as UNSAFE_LocationContext, NavigationContext as UNSAFE_NavigationContext, RouteContext as UNSAFE_RouteContext, createRoutesFromChildren, generatePath, matchPath, matchRoutes, renderMatches, resolvePath, useHref, useInRouterContext, useLocation, useMatch, useNavigate, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRoutes };\n"]},"metadata":{},"sourceType":"module"}